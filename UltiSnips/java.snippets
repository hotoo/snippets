snippet main
	public static void main (String [] args)
	{
		${1:/* code */}
	}
endsnippet

snippet pu
	public
endsnippet

snippet po
	protected
endsnippet

snippet pr
	private
endsnippet

snippet st
	static
endsnippet

snippet fi
	final
endsnippet

snippet ab
	abstract
endsnippet

snippet re
	return
endsnippet

snippet br
	break;
endsnippet

snippet de
	default:
		${1}
endsnippet

snippet ca
	catch(${1:Exception} ${2:e}) ${3}
endsnippet

snippet th
	throw
endsnippet

snippet sy
	synchronized
endsnippet

snippet im
	import
endsnippet

snippet j.u
	java.util
endsnippet

snippet j.i
	java.io.
endsnippet

snippet j.b
	java.beans.
endsnippet

snippet j.n
	java.net.
endsnippet

snippet j.m
	java.math.
endsnippet

snippet if
	if (${1}) ${2}
endsnippet

snippet el
	else
endsnippet

snippet elif
	else if (${1}) ${2}
endsnippet

snippet wh
	while (${1}) ${2}
endsnippet

snippet for
	for (${1}; ${2}; ${3}) ${4}
endsnippet

snippet fore
	for (${1} : ${2}) ${3}
endsnippet

snippet sw
	switch (${1}) ${2}
endsnippet

snippet cs
	case ${1}:
		${2}
	${3}
endsnippet

snippet tc
	public class ${1:`Filename()`} extends ${2:TestCase}
endsnippet

snippet t
	public void test${1:Name}() throws Exception ${2}
endsnippet

snippet cl
	class ${1:`Filename("", "untitled")`} ${2}
endsnippet

snippet in
	interface ${1:`Filename("", "untitled")`} ${2:extends Parent}${3}
endsnippet

snippet m
	${1:void} ${2:method}(${3}) ${4:throws }${5}
endsnippet

snippet v
	${1:String} ${2:var}${3: = null}${4};${5}
endsnippet

snippet co
	static public final ${1:String} ${2:var} = ${3};${4}
endsnippet

snippet cos
	static public final String ${1:var} = "${2}";${3}
endsnippet

snippet as
	assert ${1:test} : "${2:Failure message}";${3}
endsnippet
